//   ==================================================================
//   >>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<
//   ------------------------------------------------------------------
//   Copyright (c) 2006-2011 by Lattice Semiconductor Corporation
//   ------------------------------------------------------------------
//   ALL RIGHTS RESERVED
//
//   IMPORTANT: THIS FILE IS AUTO-GENERATED BY THE LATTICEMICO SYSTEM.
//
//   Permission:
//
//      Lattice Semiconductor grants permission to use this code
//      pursuant to the terms of the Lattice Semiconductor Corporation
//      Open Source License Agreement.
//
//   Disclaimer:
//
//      Lattice Semiconductor provides no warranty regarding the use or
//      functionality of this code. It is the user's responsibility to
//      verify the user’s design for consistency and functionality through
//      the use of formal verification methods.
//
//   --------------------------------------------------------------------
//
//                  Lattice Semiconductor Corporation
//                  5555 NE Moore Court
//                  Hillsboro, OR 97214
//                  U.S.A
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                         503-286-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
//   --------------------------------------------------------------------
//
//      Project:           platform1
//      File:              platform1_inst.v
//      Date:              Kt, 4 Geg 2023 10:33:54 EEST
//      Version:           2.1
//      Targeted Family:   ECP5U
//
//   =======================================================================

// Attn : This file is used for VHDL Wrapper

platform1_vhd platform1_u ( 
.clk_i(clk_i),
.reset_n(reset_n)
, .SPIFlash_CEJ(SPIFlash_CEJ) // 
, .SPIFlash_SCK(SPIFlash_SCK) // 
, .SPIFlash_SI(SPIFlash_SI) // 
, .SPIFlash_SO(SPIFlash_SO) // 
, .SPIFlash_WPJ(SPIFlash_WPJ) // 
, .LEDPIO_OUT(LEDPIO_OUT) // [8-1:0]
, .GPIOPIO_BOTH_IN(GPIOPIO_BOTH_IN) // [1-1:0]
, .GPIOPIO_BOTH_OUT(GPIOPIO_BOTH_OUT) // [1-1:0]
, .GPOout_pins(GPOout_pins) // [7:0] 
, .spiMISO_MASTER(spiMISO_MASTER) // 
, .spiMOSI_MASTER(spiMOSI_MASTER) // 
, .spiSS_N_MASTER(spiSS_N_MASTER) // [2-1:0]
, .spiSCLK_MASTER(spiSCLK_MASTER) // 
, .FIFOout_pins(FIFOout_pins) // [7:0] 
, .FIFOof_d(FIFOof_d) // [31:0] 
, .FIFOof_wr(FIFOof_wr) // 
, .FIFOof_wrfull(FIFOof_wrfull) // 
, .FIFOif_d(FIFOif_d) // [31:0] 
, .FIFOif_rd(FIFOif_rd) // 
, .FIFOif_rdempty(FIFOif_rdempty) // 
, .FIFOfifo_rst(FIFOfifo_rst) // 
, .uartSIN(uartSIN) // 
, .uartSOUT(uartSOUT) // 
, .lms_ctr_gpioPIO_OUT(lms_ctr_gpioPIO_OUT) // [4-1:0]
, .SPIFlash_USRMCLKTS_PIO_OUT(SPIFlash_USRMCLKTS_PIO_OUT) // [1-1:0]
, .i2cm_oc_SDA(i2cm_oc_SDA) // 
, .i2cm_oc_SCL(i2cm_oc_SCL) // 
, .dac_spi_MISO_MASTER(dac_spi_MISO_MASTER) // 
, .dac_spi_MOSI_MASTER(dac_spi_MOSI_MASTER) // 
, .dac_spi_SS_N_MASTER(dac_spi_SS_N_MASTER) // [1-1:0]
, .dac_spi_SCLK_MASTER(dac_spi_SCLK_MASTER) // 
);
